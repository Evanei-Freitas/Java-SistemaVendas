package view;

import conexao.Conexao;
import controller.Controller_Produto;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import model.Produto;

/**
 *
 * @author Programador Evanei Freitas.
 */
public class FrmInterProdutos extends javax.swing.JInternalFrame {

    int obterIdCategoriaCombobox = 0;

    public FrmInterProdutos() {
        initComponents();
        this.setSize(new Dimension(788, 498));
        this.setTitle("Novo Produto");
        this.carregarComboBoxCategoria();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_Nome = new javax.swing.JTextField();
        txt_Preco = new javax.swing.JTextField();
        txt_Descricao = new javax.swing.JTextField();
        txt_Quantidade = new javax.swing.JTextField();
        jComboBox_iva = new javax.swing.JComboBox<>();
        jComboBox_categoria = new javax.swing.JComboBox<>();
        jButton_SalvarProduto = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel1_Walpapper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Novo Produto ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 140, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Quantidade :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 120, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nome :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 80, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Preço :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 80, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Juros:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 80, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Categoria :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, 100, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Descrição :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 80, -1));

        txt_Nome.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txt_Nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 240, -1));

        txt_Preco.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txt_Preco, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 240, -1));

        txt_Descricao.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txt_Descricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 240, -1));

        txt_Quantidade.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txt_Quantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 240, -1));

        jComboBox_iva.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox_iva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o Juros", "No grava iva", "12% ", "14%", "10%", "20%", " ", " " }));
        jPanel1.add(jComboBox_iva, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 240, -1));

        jComboBox_categoria.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox_categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione a Categoria :", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(jComboBox_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 310, 240, -1));

        jButton_SalvarProduto.setBackground(new java.awt.Color(0, 204, 204));
        jButton_SalvarProduto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_SalvarProduto.setText("Salvar");
        jButton_SalvarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SalvarProdutoActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_SalvarProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, 240, 40));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ProdutosImage.png"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, 280, 270));

        jLabel1_Walpapper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo3.jpg"))); // NOI18N
        jPanel1.add(jLabel1_Walpapper, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 730, 450));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_SalvarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SalvarProdutoActionPerformed
        // Código do Botão Salvar produto.
        Produto produto = new Produto();
        Controller_Produto controllerProduto = new Controller_Produto();
        String porcentagemIVA = "";
        String categoria = "";

        porcentagemIVA = jComboBox_iva.getSelectedItem().toString().trim();
        categoria = jComboBox_categoria.getSelectedItem().toString().trim();

        //Validação dos Campos.
        if (txt_Nome.getText().equals("") || txt_Quantidade.getText().equals("")
                || txt_Preco.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, preencha todos os campos!");
            txt_Nome.setBackground(Color.red);
            txt_Quantidade.setBackground(Color.red);
            txt_Preco.setBackground(Color.red);
        } else {
            //Crio uma consulta para ver se o produto já se encontra registrado.
            if (!controllerProduto.existeProduto(txt_Nome.getText().trim())) {

                if (porcentagemIVA.equalsIgnoreCase("Selecione Iva:")) {
                    JOptionPane.showMessageDialog(null, "Selecione o Imposto ou Juros a Pagar!");
                } else {
                    if (categoria.equalsIgnoreCase("Selecione Categoria :")) {
                        JOptionPane.showMessageDialog(null, "Selecione a Categoria.");
                    } else {
                        try {

                            produto.setNome(txt_Nome.getText().trim());
                            produto.setQuantidade(Integer.parseInt(txt_Quantidade.getText().trim()));
                            String precoTXT = "";
                            double preco = 0.0;
                            precoTXT = txt_Preco.getText().trim();
                            boolean aux = false;
                            /**
                             * *
                             * Se o Usuário digita vírgulas(,), transformamos em
                             * ponto(.)
                             */
                            for (int i = 0; i < precoTXT.length(); i++) {
                                if (precoTXT.charAt(i) == ',') {
                                    String precoNovo = precoTXT.replace(",", ".");
                                    preco = Double.parseDouble(precoNovo);
                                    aux = true;
                                }
                            }

                            //Avaliar a condição.
                            if (aux == true) {
                                produto.setPreco(preco);
                            } else {
                                preco = Double.parseDouble(precoTXT);
                                produto.setPreco(preco);
                            }
                            produto.setDescricao(txt_Descricao.getText().trim());

                            //Porcentagem e Juros IVA.
                            if (porcentagemIVA.equalsIgnoreCase("Sem Juros")) {
                                produto.setPorcentagemIva(0);
                            } else if (porcentagemIVA.equalsIgnoreCase("12%")) {
                                produto.setPorcentagemIva(12);
                            } else if (porcentagemIVA.equalsIgnoreCase("14%")) {
                                produto.setPorcentagemIva(14);
                            } else if (porcentagemIVA.equalsIgnoreCase("10%")) {
                                produto.setPorcentagemIva(10);
                            } else if (porcentagemIVA.equalsIgnoreCase("20%")) {
                                produto.setPorcentagemIva(20);
                            }

                            //IdCategoria - Carregar o Método para obter o idCategoria.
                            this.idCategoria();
                            produto.setIdCategoria(obterIdCategoriaCombobox);
                            produto.setEstado(1);
                            if (controllerProduto.SalvarProduto(produto)) {
                                JOptionPane.showMessageDialog(null, "Produto Salvo com sucesso!");
                                txt_Nome.setBackground(Color.green);
                                txt_Quantidade.setBackground(Color.green);
                                txt_Preco.setBackground(Color.green);
                                txt_Descricao.setBackground(Color.green);

                                this.carregarComboBoxCategoria();
                                this.jComboBox_iva.setSelectedItem("Selecione o ImpostoIVA");
                                this.limparCampos();

                            } else {
                                JOptionPane.showMessageDialog(null, "Erro ao tentar Salvar Categoria!");
                            }

                        } catch (HeadlessException | NumberFormatException e) {
                            JOptionPane.showMessageDialog(null, "Erro ao tentar Salvar a Categoria!" + e);
                        }
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "O produto já encontra-se cadastrado!");
            }

        }

    }//GEN-LAST:event_jButton_SalvarProdutoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_SalvarProduto;
    private javax.swing.JComboBox<String> jComboBox_categoria;
    private javax.swing.JComboBox<String> jComboBox_iva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel1_Walpapper;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txt_Descricao;
    private javax.swing.JTextField txt_Nome;
    private javax.swing.JTextField txt_Preco;
    private javax.swing.JTextField txt_Quantidade;
    // End of variables declaration//GEN-END:variables

    /**
     ***************************************************************
     * Método para limpar Campos.
     * **************************************************************
     */
    private void limparCampos() {
        txt_Nome.setText("");
        txt_Quantidade.setText("");
        txt_Preco.setText("");
        txt_Descricao.setText("");

    }

    /**
     **************************************************************
     * Método para carregar a categoria no cb_box - Categoria.
     * *************************************************************
     */
    private void carregarComboBoxCategoria() {
        Connection cn = Conexao.conectar();
        String sql = "Select * From tb_categoria";
        Statement stm;

        try {
            stm = cn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            jComboBox_categoria.removeAllItems();
            jComboBox_categoria.addItem("Selecione Categoria :");

            while (rs.next()) {
                jComboBox_categoria.addItem(rs.getString("descricao"));
            }
            cn.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar carregar o comboBox Categoria!" + e);
        }

    }

    /**
     **************************************************************************
     * Método para carregar o idCategoria
     **************************************************************************
     */
    private int idCategoria() {
        String sql = "Select * From tb_categoria Where descricao = '" + this.jComboBox_categoria.getSelectedItem() + "'";
        Statement stm;
        try {
            Connection cn = Conexao.conectar();
            stm = cn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                obterIdCategoriaCombobox = rs.getInt("idCategoria");

            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao obter a categoria!" + e);
        }

        return obterIdCategoriaCombobox;
    }

}
