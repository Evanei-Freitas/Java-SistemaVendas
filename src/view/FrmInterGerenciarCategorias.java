package view;

import conexao.Conexao;
import controller.Controller_Categoria;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.Categoria;

/**
 *
 * @author Programador Evanei Freitas.
 */
public class FrmInterGerenciarCategorias extends javax.swing.JInternalFrame {

    private int idCategoria;

    public FrmInterGerenciarCategorias() {
        initComponents();
        this.setSize(new Dimension(788, 498));
        this.setTitle("Gerenciar Categorias");
        this.carregarTabelaCategorias();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Categoria = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_Atualizar = new javax.swing.JButton();
        jButton_Excluir = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_Descricao = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel_Walppeper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar Categorias");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jTable_Categoria.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTable_Categoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_Categoria);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 460, 380));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 480, 400));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_Atualizar.setBackground(new java.awt.Color(51, 204, 0));
        jButton_Atualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_Atualizar.setText("Atualizar");
        jButton_Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AtualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Atualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 160, 40));

        jButton_Excluir.setBackground(new java.awt.Color(255, 51, 51));
        jButton_Excluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_Excluir.setText("Excluir");
        jButton_Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ExcluirActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Excluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 160, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 60, 260, 110));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Descrição :");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        txt_Descricao.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel3.add(txt_Descricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 240, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 190, 260, 90));

        jPanel4.setBackground(new java.awt.Color(0, 51, 51));
        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 480));

        jLabel_Walppeper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo3.jpg"))); // NOI18N
        getContentPane().add(jLabel_Walppeper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AtualizarActionPerformed
        //Código do botão para atualizar Categoria.
        if (!txt_Descricao.getText().isEmpty()) {
            Categoria modelCategoria = new Categoria();
            Controller_Categoria controllerCategoria = new Controller_Categoria();

            modelCategoria.setDescricao(txt_Descricao.getText().trim());
            if (controllerCategoria.atualizarDados(modelCategoria, idCategoria)) {
                JOptionPane.showMessageDialog(null, "Categoria Atualizada com Sucesso!");
                txt_Descricao.setText("");
                this.carregarTabelaCategorias();
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao tentar atualizar uma categoria!");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma Categoria!");
        }

    }//GEN-LAST:event_jButton_AtualizarActionPerformed

    private void jButton_ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ExcluirActionPerformed
        //Código do botão para atualizar Categoria.
        Categoria modelCategoria = new Categoria();
        Controller_Categoria controllerCategoria = new Controller_Categoria();
        modelCategoria.setDescricao(txt_Descricao.getText().trim());

        if (idCategoria == 0) {
            JOptionPane.showMessageDialog(null, "Selecione a Categoria para ser Excluido!");
        } else {

            //Excluindo Clinete.
            int excluir = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja Excluir a Categoria"
                    + "?", "Atenção", JOptionPane.YES_NO_OPTION);
            if (excluir == JOptionPane.YES_OPTION) {
                if (!controllerCategoria.excluirDados(idCategoria)) {
                    JOptionPane.showMessageDialog(null, "Categoria Excluido com Sucesso!");
                    this.carregarTabelaCategorias();
                    txt_Descricao.setText("");
                } else {
                    //JOptionPane.showMessageDialog(null, "Você Cancelou a opção de Excluir o Cliente");
                }
            }
        }

    }//GEN-LAST:event_jButton_ExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Atualizar;
    private javax.swing.JButton jButton_Excluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_Walppeper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_Categoria;
    private javax.swing.JTextField txt_Descricao;
    // End of variables declaration//GEN-END:variables

    /**
     * *
     *
     * Método para mostrar todas as Categorias Salvas no Banco de Dados.
     */
    private void carregarTabelaCategorias() {

        Connection con = Conexao.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "Select idCategoria, descricao, estado From tb_categoria";
        Statement st;

        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            FrmInterGerenciarCategorias.jTable_Categoria = new JTable(model);
            FrmInterGerenciarCategorias.jScrollPane1.setViewportView(FrmInterGerenciarCategorias.jTable_Categoria);

            model.addColumn("idCategoria");
            model.addColumn("descricao");
            model.addColumn("estado");

            while (rs.next()) {
                Object fila[] = new Object[3];

                for (int i = 0; i < 3; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }

            con.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar carregar a Tabela Categorias :" + e);
        }

        jTable_Categoria.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_Categoria.rowAtPoint(e.getPoint());
                int coluna_point = 0;

                if (fila_point > -1) {
                    idCategoria = (int) model.getValueAt(fila_point, coluna_point);
                    EnviarDadosCategoriaSelecionada(idCategoria);
                }
            }
        });
    }

    /**
     * *
     * Método para quando clicar com o mouse no nome da categoria ela preencha
     * automaticamente o txt_Descricao.
     *
     * @param idCategoria
     */
    private void EnviarDadosCategoriaSelecionada(int idCategoria) {

        try {
            Connection con = Conexao.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "Select * From tb_categoria Where idCategoria = '" + idCategoria + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txt_Descricao.setText(rs.getString("descricao"));
            }
            con.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao Selecionar a Categoria!" + e);
        }

    }

}
